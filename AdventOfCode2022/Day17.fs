module Day17

open System
open System.Text.RegularExpressions
open Microsoft.FSharp.Core

let emptyRow = "......."

let rocks =
    [ "..####"
      "...#.\n..###\n...#."
      "....#\n....#\n..###"
      "..#\n..#\n..#\n..#"
      "..##\n..##" ]
    |> Seq.map (fun v -> v.Split("\n") |> Seq.toList)
    |> Seq.toList

let windPattern = Helpers.readInput 17 |> Seq.head |> Seq.toList

let rockSeq =
    seq {
        while true do
            yield! rocks
    }

let getCurrentRock (rockIndex: uint64) =
    rocks[int (rockIndex % (uint64 rocks.Length))]

let getCurrentWind windIndex =
    windPattern[windIndex % windPattern.Length]

let getRockParticles (rock: string list) baseRow =
    let particles =
        rock
        |> Seq.mapi (fun rowI row -> row |> Seq.mapi (fun colI c -> (rowI, colI, c)))
        |> Seq.collect id
        |> Seq.filter (fun (row, col, c) -> c = '#')
        |> Seq.map (fun (row, col, _) -> (baseRow + row, col))
        |> Seq.toList

    particles

let drawParticles (particles: (int * int) list) (chamber: string list) =
    let collides =
        particles
        |> Seq.exists (fun (pRow, pCol) ->
            pRow < 0 || pCol < 0 || pCol >= chamber[0].Length || chamber[pRow][pCol] = '#')

    if collides then
        None
    else
        let newChamber =
            particles
            |> Seq.fold
                (fun (chamber: string list) (pRow, pCol) ->
                    let newRow =
                        System.String.Concat(chamber[pRow] |> Seq.toList |> List.updateAt pCol '#')

                    chamber |> List.updateAt pRow newRow)
                chamber

        Some(newChamber)

let undrawParticles (particles: (int * int) list) (chamber: string list) =
    particles
    |> Seq.fold
        (fun (chamber: string list) (pRow, pCol) ->
            let newRow =
                System.String.Concat(chamber[pRow] |> Seq.toList |> List.updateAt pCol '.')

            chamber |> List.updateAt pRow newRow)
        chamber

let applyWind rockParticles windDirection =
    let spaceLeft = rockParticles |> Seq.map (fun (pRow, pCol) -> pCol) |> Seq.min

    let spaceRight =
        emptyRow.Length
        - 1
        - (rockParticles |> Seq.map (fun (pRow, pCol) -> pCol) |> Seq.max)

    let offsetLeft = if spaceLeft > 0 then -1 else 0
    let offsetRight = if spaceRight > 0 then 1 else 0

    rockParticles
    |> Seq.map (fun (pRow, pCol) ->
        let offsetX =
            match windDirection with
            | '<' -> offsetLeft
            | '>' -> offsetRight
            | _ -> failwith "Unsupported wind direction."


        let newX = min (emptyRow.Length - 1) (max 0 pCol + offsetX)
        (pRow, newX))
    |> Seq.toList

let applyUpwardsMovement rockParticles =
    rockParticles |> Seq.map (fun (pRow, pCol) -> (pRow - 1, pCol)) |> Seq.toList

type ChamberState =
    { chamber: string list; windIndex: int }

type ChamberRockState =
    { chamber: string list
      windIndex: int
      rockParticles: (int * int) list }

let printChamber (chamber: string list) =
    chamber |> Seq.rev |> Seq.iter (fun line -> printfn $"|%s{line}|")
    printfn "+-------+"
    printfn ""
    printfn ""
    printfn ""

let findLongestRepeatingPattern (str: string) =
    let m = Regex.Match(str, "(.{30,})\1")
    let pattern = m.Groups[1].Value
    pattern

let calculateHeight rockCount =
    let advanceWind (state: ChamberRockState) =
        let currentWind = getCurrentWind state.windIndex
        let movedParticles = applyWind state.rockParticles currentWind

        let newChamber =
            (state.chamber |> undrawParticles state.rockParticles)
            |> drawParticles movedParticles

        match newChamber with
        | Some chamber ->
            Some(
                { chamber = chamber
                  windIndex = state.windIndex + 1
                  rockParticles = movedParticles }
            )
        | None -> None

    let advanceFall (state: ChamberRockState) =
        let movedParticles = applyUpwardsMovement state.rockParticles

        let newChamber =
            (state.chamber |> undrawParticles state.rockParticles)
            |> drawParticles movedParticles

        match newChamber with
        | Some chamber ->
            Some(
                { state with
                    chamber = chamber
                    rockParticles = movedParticles }
            )
        | None -> None

    let mutable patternOccurrences = 0
    let mutable prevRockIndex = 0UL
    let mutable prevWindIndex = 0
    let mutable prevHeight = 0UL
    // let pattern =


    let pattern =
        ".####...#.....###.....####...####...####...#.####.#..#...#####..##.#....###....#.#....#.#....#......#....####......#.....####.#######..#..#...#......#......#......#......#......##.....##...####.....###....###....###......#......#......#......#....####..###.#..#.####.#.###..#..#...#..#...##.#...##.....####......#.....###..####...###....###....####.....#.....###..####...#.#....#.#....#.####.#...#..##.###.##..#..#####..###.#....#.#....#......#.....####....#.....###...######.###..#...#..#...#......#.....####...#..##########.#.####.######....###...####.####.#...###....###....####.###.#..#.####.#.#.#..#.####.####..##.##..##.##...#.###.######..#.....####......#.....###...######.###..#...#..#...#......#...####.....#.....###....#####..#.###..#.###..#...#.#############.###.#....#.#....#####..##.....###...######.###..#...#..#...#......#....####..###.#...#####..##.#...#..##..#..##...#####.#####...#.##...###....#.#....#.#....#......#.....##.....##....####......#.....###..####.....#......#......#......#......#......#......####......#.....###..####..####...####.....#......#...####......#.....###..######...####...##......#......#.....####....#.....###.....#.....###....#.#....#.#....#......#......##.....##....#####.###.###.#....#.#....#.#...##.#...##.#.####...#.....###.....#....###...####...####...###....###......####....#.....###.....#......###....#.#....#.#....#......#...#####...#.###..####...######.######.#.#..########.#.#..#.#.#..#.###....###....#.####...#.....###.....#.....###......#......#......##.....##...####...#.#...####....#.#..###.#..#####..#####....####....#.....###.....####.######...#.##..####....#.#..#####...####...##.....#####..##.....###.....#....###.....##.....##.....###....###...#####.###.....####.....##.....##.....#......#.....##.....##.....####.###..#...#.###..#..#...#......#......#......#......##.....##....#####.###.###..#..#...#..#.####.#......#......#.....##.....##.....#.....###.....#....###....#.#....#.#....#......#.....##.....##....####....#.....###.....####.....##.....##.....#......#.....##.....##.....#####.###.....#......###...##.#...##.#..#####......#......#.....##....####.########.#..#.#.####.#.##.#.#.##.#.####.##..#..##..#......#......#......####....#.....###..####...#.#....#.#....#.#....#.#......#......#......##.....##....####...##.#...#####.....#......###......#......#...####...#.#...####....#.#...####...###....###..#####....#.#...####....#.#....###..#####....#.#...#####...#.##..###.#.##.#.#.##.#.#......#....####.....#.....###..####...###....###......#......#......#......#.....####...#.....###..####...#.#....#.#....#.#....#.#......#......#......##.....##......####.#####..#..######..#..##.######.######.###..#.###.####.#....#.#...###.....#....###....###....###......#......#......#......#....####......#.....###.....#....###.....##.....##.....#......#......##.....##..####.....#.....###..######.######.####....#.#....#.#....#.####.#...#.....###..####...#.#....#.#....#......#......####....#.....###.....#.....###......#......#......##.....##..#####....#.#...####....#.#..###...##.#...##.#....#####.###.#####....######.##...#..#..###.##.##..##.####.###..#.###..#..####..###.#..#.####.#.#.#..#.####.#..#..##.###.##..#..#####..##..#......#......#......#......#......#...####...#.###.###.##..#####..####...#..#...#####..#.#.....###.....#.....###...##.#...##.#...#####..#..###.#####..####...####....####....#.....###..#####....#.#....#.#....###....##....####...#.########..#.#.#..#.###....##.....#####.###....#####..#...#..#...#..##.##..#####..##.#####...####...####...####.####.#....#.#...####.####...#.###.######..#####.######...####...##..#####.....#.....###.....#.....###....#.#....#.#....#......#......##.....##....#####.##..#####...#..#..######.#.#.#..#.####.#...##.#...######.#..##..#..##..#####.###.....####...####...####...#.####.#.###..#...#.###..#..##....###....###......#....#####..##.###.##..#...#..###.#..#.#.#..#.#.#..#......#....####....#.....###.....####..##..#..##..#..#####....#.#...####.####.#.#.#....#.#....#......#......##.....##......####...#..#..######..#..#.###....###....###....####...#.###..#..##..#..##..#..#......#.....##.....##......####...#.....###.....#.....###....###....####.#######.###.#...##.....##.....#......#......##.....##....#####..#..###.#...#..#..###.#..###....###...####...#.....###..####.....#......#......#......#......#......#......##.....##....#####.######..#...#..#...#..#.####.#...#..#..#####..##.##..#...####.....##.....#.....##.....##......####.###.#....####...###.#####...#..#..###.#...#..##.....##...###....#.#....#.#....#.##...#.##..####.....#.....###..#####....#.#....#.#......#......##.....##..#####..######.#.#.#..#.#.#..#...#..#...#......#.....##.....##...####.....#.....###..####...###....###.....#####.###.....###..#####..###....###....######.##.#.....###...######.##...#.#....##########..####.....##.....##....##.....##...####....#.....###..####...#.#....#.#....###....###....#.####.#...#..#..###.#####...###....###..#####.....###..####..####...####.....#......#....####......#.....###..####...##########.....##.....##.....##.....###.....###...######.##...######.#.#####..##.#....###.....##.....##.....#......#....####...#.....###.....####......#......#......#......#......#......#......##.....##....####....#.....###.....#....###...##.#...##.#......#......#......#......#...#####.######.##.###.#..###.#..######.....###.....####..##..#..##..#......#......#......#......#...#####.###.###.#....#.#....#.#.####.####...#..#..##..#..###.....###...##########.#...#####..##.#...##.....####......#......#......##.....##..#####.###.....####....#.#....#.#....#......#......##.....##.....####....#.....###.....####..###.#..###.#.##.#...##.#....####...#.#....####...#.#....#.###.####.####.#.#######.###.#......#......#......#......#.....####...#.....###.....#.....###....#.#....#.#....#.##...#.##..#####.###.....####..###.#..###.#..#.#....#.#....#.####.#..#.....###...######.##...#.######.#.#....####...#.#...#####..##..#......#....####...#.....###...###....#####......#......#......#......#......#......#...#####.###.....####...##.#...##.#......#......#......#......#....####....#.....###.....#.....###....#.#....#.#....#......#......##.....##......####...#.#...####.####.#.###..#.###....####...##.#...#####...#.########..#.#.#..#...#......#......####..###....###....###......#......#......#......#...####...#.#....####...#.####.#.##.#...##.######...#.###..#..#...####...#..#...##.#...######..#.###.###..#..##..#...#.##...#.##...#.....####..###.#...#####..##.#...#......#......##.....##....####.....#.....###....#####..#...#..#...#..#..##.....##..####....#.##..#####...#.....###....#.#....#.#....#......#......####...#.#...####....#.#...####.....##.....##....###....###..####...#..#...#.###..#..#...####......#......#.....##.....##.....####......#.....###..####.....###....###.#####.###....##.....####...#.##...#.##...###....###......##.....##.....####....#.....###.....#.....###....#.#...####....#####..###....###....###......#......#......#......#...####...#.#....####...#.####.#....###....###......####...#.###.####.#..#.#.#....###....###...#####.###...######.###..#...#..#...#......#......##.....##.....####....#.....###....#####..#...#..#...#..#....#####..######.###.#..#...####...#.#....#.#....#......#....####....#.....###.....####..##..#..##..#...####...#.....###.....#.....###....#.#....#.#....#......#......##.....##.....####.....#.....###.....#.....###....###....###....##.....##......##.....##..#####..######.###.#..###....####...#..#...#.###..#..#...####..##..#..##..#....####...#.....###....##.....####...#..#...#..#......##.....##..####...#..######...#.##...####....###......#.....####.....#.....###.....#########.#....#.#....#......#......##.....##.....#.....###.....#....###....#.#....#.#....#.#....####..##.#...##....####....###.....##.....##.....#......#......##.....##...####.....#.....###.....####...####...####.....#......#...####..##.#...#####....#####..#...#..#...#..#....#####.....###.....#.....###....#.#....#.#....###....###.####.#.....###..####.....#......#......#......#......#......#......##.....##....####...#.....###..#####....####...#.#....#......#......#......#......##.....##...####...#.###..#.#.#..#.#.#..#.#......#......##.....##....#####..######...#.#....#.....##.....##....#####.###.###..#..#...#..#......#......#......#.....##.....##..#####.###.######...##.#...##.#....#.#......##.....##......####...#.....###.....#.....###..#####......#......##....###...####.####.#...#..#...#..#...##....###...#######.##.###.##...#.##...#.##.....###.....##.....####....#.....###..####...#.####.#.#..#.###..#.###.##.....##....####.....#.....###.....#...#####.###.....####...#..#...#..#...#..##..#..##..#####..#...#.###..#..#...####......#......#......##.....##.....####....#.....###....#####..#...#..#...#..#..##.######...#.#...####....#.#...####...#.#....#.#....###....###...#####.###.##..#..##.###......#......#.....####.....#.....###.....#.....###....###....###....##.....##.....##.....##....#####.....###.....#.....###...##.#...##.#####..#...#..#..###.#####..####....###....####...##.#...#####.....#......###....#.#....#.#....#......#....####......#.....###.....#....###....###....###..#####......#......#.....##....###....#####.####.#..#.#.#..###....###......##.....##....#############.##.###.##.#...##.....###.....###.....#.....###.#########...#.##.######...####...#..#....####......#.....###.....#.....###....#.#....#.##...#.###..#..##..##..#..##..#####..#.###...##.#...##.#.....##.....##.....####....#.....###.....#.....###....#.#....#.#....#......#......##.....##.....####....#.#....####...#.#....####.####.#....#.#...###..####...#.#....#.#....#.####.#......##.....##......#.....###.....#.....###.....##.....##.....#......#......##.....##...####......#.....###.....#.....###....###....###..#####..###.#..#.#.#..#.#.##.###.######..##.#....#.#....#.#....#.#.####.....#.....###.#####..##.###.##.###....###.....#.....###.....#....###..#####...#..#..#####...####.####...####...####....####...#.....###....#####..#...#..#...#..#......#####.....###.....#....###....#.#....#.#....#......#......##.....##......####..##.#...#####.....#.....###....#.#....#.#....#......#...#####.###.###..#..#...#......#......#......#......#......##.....##....####..##.#...#####.....#.....###......#......#......#......#......#......#....####....#.#...####....#.#..###.#..###....###....####.....#.....###.....#########.#.#..#.####.#...#..#...#####.######.####...###....###......####....#.....###.....#.....###....#.#....#.#....#......#......####...#.....###.....#......###....#.#....#.#....#......#......##.....##.....#####.###.##..#..#####....#.#....#.#....#......#......#####...#.###..#..#...#..###.#....#......#.....##.....##..####....#.....###.....####..###.#..###.######.....##....###.....#....###.....##.....##.....#......#......##.....##.....####....#.....###.....#.....###......#......#......#......#......#......#......##.....##..#####...#.###..#..#...#.###..#...#..##..#..##....####.....#.....###.....#.....###...####...####.....#......#....#####.######.##.###.#..###.#..######..######...###....##......#......#......##.....##.....#####..######...#####..##.##...#......#......####...#.....###..####.....#......#......#......#......#......#.....##.....##....#####..#..###.#...#..#...####.#######...####..###.###.#..#.#.##.#.#.##.#####..#..#.....###..####...####...####......#......#...####...#.....###....##.....####...#..#...#..#.....##.....##.....####....#.....###...###....#####....#.#....#.#....#......#....#####.#######..##.#...##.##...#.##...####.###.#....####...###.....#......#......#......##.....##..####...#.....###.....####...#..#...#..#...#..##..#..##.#######.#..#.####.#.#.#..#...##.#...#########.#....####...#.#....#......#......#......#......##.....##......####.###.#.###########.#.###....###......####....#.....###.....#.....###....#.#....#.#....#......#.....####.....#.....###.....#.....###...####...####.....#......#.....####...#.....###...###....#####..#.#.#..#.#.#..#.#.##.#.#.##..####.....#.....###.....#.....###......#......#.....####.###.#...#####..####...####...#.#...#####..##..#.####.#...#.##...#.##...#......#.....####......#.....###.....#....###....###....###......#......#......#......#....####.....#.....###..####....##.....##.....####...#..#...##.#...##...####....#.....###.....###....###....#####..#......##.....###.....####....#.#....#.#....#......#.....##.....##....####.....#.....###.....#########.#....#.#....#......#......##.....##.....#.....###..####....##.....##.....#......#......##.....##....#####.###.###.##...#..#...#..#......#......##....###...#######.#...#.###..#...#..#...#..#.######..#..##..#...#..#..###.#####.##..#..##..#...#####.######..#...#..#...#..#.####.#..#...#.###.##..#..##.###.#....#.#....#.#......#......##.....##......####..###.#..#.####.#.#.#..#...##.#...##..#####.###.....####..##..#..##..#...#..#..###.#...##.#..###.#..#######..#.###...##.#...##.#..####....#.....###.....#########.##.#.#.######..#.#.#..#...###...##.#...##.#.#####.###..#..#####..#####..#####..#...##.#...##.####.....#.....###..####...###....###.....####...#.....###.....#.....###.....##.....##.....#......#......#####..#..###.#####..#..#...#..#..######.##.#.#...####....#.#...####.....#......#......##.....##...####....#.....###..####....######.##.....#......#.....##.....##......#.....###.....#......###....#.#....#.#....###....###.....####...#.....###....##.....####...#..#...#..#..######.##.####.#.#..#####..###.#...#.##...#.##...#.#####.#####...#.##..###......#......#...####.....#.....###...######.##..##..#..##..#..#...#..#...#####....#.....###.....#.....###......#......#......##.....##..#####.###.....####....#.#....#.#....###....###....####....#.....###.....#.....###....###....###......#......#......#......#...#####.###.###..#..#...#......#......#......#......#......##.....##....#####.###.###..#..#...#..#..##..#..##..#......#...####......#.....###..####....##.....##.....#......#.....##.....##.....####....#.....###.....#.....###.....##.....##.....#......#.....##.....##....####...####..###.#...#..#......#......#......#......#......##.....##..#####.###.####.#..#.#.######.#....####...####...##.#...####...#.##...#.###..#..##..#.####.#..#...#.###..#..#####...###....###...####...#.....###.....####..###.#..###.#....#......#....####...#.###.###..####...#######..#...#####..##.#.....###......#......#......#......#......#......#.....####...#.....###.....####....#.#....#.#....#......#......##.....##.....####..###.#....####...###.....#......#......#......##.....##...#####.####....#.#..###.#....#.#....#......##.....##.....####......#.....###..####..##.#...##.#......#......#......#......#...####...#.....###.....#.....###....###....###......#......#......#......#......##.....##......####.....#.....###..####...#.##...#.##...#..#...#..#.#####..#..###.#####..#..#...#..#...#.##...#.##...#.####.#.#.....###.....####...##.#...##.#.####....####..###.#...####....##......####...#.....###.....#.....###....#.#....#.#....#......#......##.....##.....#####.#########..####...######.#...#..#..###.....####....#.#....#.#....#......#.....##.....##......####.###.#..######.#####.....#......#......#....#####.###.....####..##.##..##.##.....#......#....####.....#.....###.....#....###......#......#......#......#......#......#......##.....##...####...#.....###...###....#####....#.#....#.#....#......#....####....#.#....####...###....#####...#..#...#..#...##.....##.....####....#.....###.....#....###...##.#...##.#....####...#.###.###.##..#####...###..######.###.######..#.###..#.#....#.#....#.#....#.#.#####.###.....#......###....###....###...####...#.#...####....#.#...####.....#......#......#......#......#......#.....##.....##....####....#.....###.....####..##..#..##..#....####...#.#....####...#.#....#.##########.#..#########..#####...####.....#......#...#####.###.....#.....###....###....###......#......#......#......#......####..###.#..######.#####.#####....#.#...####....#......###....#.#....#.#....#.##...#.##.#######..#..#...#.###..####...###......#......#....#####.###....#####..##..#..##..#..##....###....####.....##.....####....#.....###.....########..####..###.#.####.#..###...####...###.####.#...#.....###..####.....##.....##......#......#.....##.....##.....####....#.....###..####...#.###..#.###..#.#########...###....#####..#####..#####....####....#.....###...###....#####..#####....#.#...###.....####...##.#...###########..####...#.#....#.#....#......#......##.....##.....#####.###.##..#..#####....#.#....#.#....#......#......####....#.#....####...#.#....####....###....###...#####.###.###..#..#...#..#..##..#..##..#.####.#....#.....###..####....##.....##.....###....###....####.....#.....###..######..##.##..######.#......##.....###.....#......###.....##.....##.....#......#.....##.....##....#####..#..###.#####..####...####....#####.######.##..##.###.##.###.#..#...#..####...#.....###.....#......###....###....###.....####....#.....###.....#.....###...####...####.....#......#.....####....#.....###.....#......###....#.#....#.#....#.#....#.#...##.#...##.#...####....#.....###..####.....##.....##......#......#.....##.....##...####....#.....###.....#.....###......#......#......##.....##.....####..###.#....####...###...###....###......#...#####.###.###.#...##.######...#.#...####....###..#####...##.....##.....#......#......##.....##.....####....#.....###.....#.....###......#......#......#......#......#......#......##.....##..#####..##.###.##..#.....###....#.#....#.#....#......#...####.....#.....###.....#.....###.....##.....##.....#......#.....##.....##....#####.######.##...#.#....#.#...##.#...##...####...####..###.#..##..#..###....###....#......####...#.....###.....####..###.#..###.#....#......#......####...####..###.#..##..#..#......#......#......##.....##......####...####..#####...#.##..##.#...##.#...#.#######...#.#....#.###..###.#..###.#...####....#.....###.....####...#..#...#..#...#.##...#.##....####....#.....###.....#.....###..#####...#..#...#..#...#..#...#..#......#......##.....##......#.....###.....#.....###....#.#....#.#....#......#......##.....##...####....#.....###.....####..##..#..##..#..#####.###....##.....####...#..#...#..#..##.#########...#.##..#####...#.#......#.....##.....##....#####.##..#####...#.....###.######.#...#####..#.##...#.#...####..##.##..##.#..####....#.....###.....####..###.#..###.######....#.#...###.....#......###....#.#....#.#....#.##...#.##....####...#.....###..####.....##.....##......#......#.....##.....##....####...#.#....####...#.#....#.###.##...#.##...#..#####.###.####.######.#############....##....##....###..####...###....###....####......#.....###..####.....#......#.....##.....##.....####...#.###.###..#.####.#.#.##...#####..#.#.....###....#####..#...#..#...#..#.....##.....##....#####...#####..##.#..############.#..###.#..###.....###.....###...###....##....####.....#.....###.....#....###.....##.....##.....#......#.....##.....##..."


    let advanceRock (state: ChamberState) (rockIndex: uint64) =
        let rock = getCurrentRock rockIndex |> List.rev // Flip vertically for falling upwards.
        let initialRockPosition = state.chamber.Length + 3
        let rockParticles = getRockParticles rock initialRockPosition

        let chamber =
            seq {
                yield emptyRow
                yield emptyRow
                yield emptyRow
                yield emptyRow
                yield emptyRow
                yield emptyRow
                yield emptyRow
            }
            |> Seq.append state.chamber
            |> Seq.toList

        let chamberInitial = (drawParticles rockParticles chamber).Value // Always safe

        let chamberRockState =
            { chamber = chamberInitial
              windIndex = state.windIndex
              rockParticles = rockParticles }

        let rec transform chamberRockState =
            let chamberAfterWind = advanceWind chamberRockState

            match chamberAfterWind with
            | Some stateAfterWind ->
                let chamberAfterFall = advanceFall stateAfterWind

                match chamberAfterFall with
                | Some stateAfterFall -> transform stateAfterFall
                | None -> stateAfterWind
            | None ->
                let stateAfterWind =
                    { chamberRockState with windIndex = chamberRockState.windIndex + 1 }

                let chamberAfterFall = advanceFall stateAfterWind

                match chamberAfterFall with
                | Some stateAfterFall -> transform stateAfterFall
                | None -> stateAfterWind

        let finalState = transform chamberRockState

        let result =
            { chamber =
                finalState.chamber
                |> Seq.rev
                |> Seq.skipWhile (fun row -> row = emptyRow)
                |> Seq.rev
                |> Seq.toList
              windIndex = finalState.windIndex }

        let flattened = String.Concat(result.chamber)

        let parts = flattened.Split(pattern)

        if (parts.Length - 1) > patternOccurrences then
            patternOccurrences <- parts.Length - 1
            let lastPart = parts |> Seq.last

            let rockDistance = rockIndex - prevRockIndex
            let windDistance = result.windIndex - prevWindIndex
            let heightDistance = uint64 result.chamber.Length - prevHeight
            prevHeight <- uint64 result.chamber.Length
            prevRockIndex <- rockIndex
            prevWindIndex <- result.windIndex
            printfn "Rock distance: %d wind index = %d height distance %d" rockDistance windDistance heightDistance

        //printChamber result.chamber

        // Rock distance: 105 wind index = 598
        // Rock distance: 70 wind index = 400
        // Rock distance: 70 wind index = 400
        // Rock distance: 70 wind index = 400
        // Rock distance: 70 wind index = 400

        // ( 2022 - 105 ) / 70

        result

    let targetRockIndex = rockCount
    //
    // let finalChamber =
    //     Seq.init (int targetRockIndex) uint64
    //     |> Seq.fold advanceRock { chamber = []; windIndex = 0 }
    //
    // let longString = System.String.Concat(finalChamber.chamber)
    //
    // let pattern2 = findLongestRepeatingPattern longString

    // if pattern = pattern2 then
    //     printfn "Test"

    let patternToChamber =
        pattern
        |> Seq.rev
        |> Seq.chunkBySize emptyRow.Length
        |> Seq.rev
        |> Seq.map String.Concat
        |> Seq.toList

    let rockOffset = 1979UL
    let rockPeriod = 1740UL

    let windOffset = 11538
    let windPeriod = 10091

    let initialHeightPeriod = 3046UL
    let heightPeriodPerRockPeriod = 2681UL

    let rockPeriodCount = ((targetRockIndex - rockOffset) / rockPeriod)

    let precomputedHeight =
        initialHeightPeriod + rockPeriodCount * heightPeriodPerRockPeriod

    let rockStartIndex = rockOffset + rockPeriod * rockPeriodCount
    let windStartIndex = windOffset + windPeriod

    let remainingIterations =
        Seq.init (int (targetRockIndex - rockStartIndex - 1UL)) (fun i -> uint64 i + rockStartIndex + 1UL)

    let finalChamber =
        remainingIterations
        |> Seq.fold
            advanceRock
            { chamber = patternToChamber
              windIndex = windStartIndex }

    let result =
        uint64 finalChamber.chamber.Length + precomputedHeight
        - uint64 patternToChamber.Length

    result

let part1 () = calculateHeight 2022UL |> string

let part2 () =
    calculateHeight 1000000000000UL |> string
